version: '3'

services:

  mysql-db:
    container_name: mysql-db
    image: "mysql:latest"
    env_file:
      - ./database/db.env
    ports:
      - "3306:3306"
    volumes:
      - ./database/db-create.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network

  demo-app:
    container_name: demo-app
    build: ./backend
    image: "demo-app:latest"
    ports:
      - "8089:8089"
    environment:
      KAFKA_HOST: kafka:9092
      KAFKA_TOPIC: sensor_data
      KAFKA_CONSUMER_GROUP: consumer-sensor-data-group
      DB_URL: jdbc:mysql://mysql-db:3306/parking_data_db?autoReconnect=true
      SERVER_PORT: 8089
    env_file:
      - ./backend/secrets.env
    depends_on:
      - mysql-db
      - kafka
      - zookeeper
    networks:
      - app-network

  frontend-app:
    container_name: frontend-app
    build: ./frontend
    image: "frontend-app:latest"
    environment:
        - BACKEND_URL=http://demo-app:8089
        - HOST=0.0.0.0
    ports:
      - "8080:8080"
    depends_on:
      - demo-app
    networks:
      - app-network

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - app-network

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LOG_RETENTION_MS: 30000
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 10000
    networks:
      - app-network

  simulator:
    container_name: simulator
    build: ./simulation
    image: "simulator:latest"
    ports:
      - "9090:9090"
    environment:
      NODE_OPTIONS: --max_old_space_size=4096
      KAFKA_HOST: kafka:9092
      KAFKA_TOPIC: sensor_data
      TOPIC_PARTITIONS: 3
      TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - kafka
      - zookeeper
    networks:
      - app-network

networks:
  app-network:
    driver: bridge